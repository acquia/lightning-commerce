<?php

/**
 * @file
 * Acquia Commerce demo module file.
 */

use Drupal\node\NodeInterface;

/**
 * Update node translation.
 *
 * @param \Drupal\node\NodeInterface $node
 *   Object of node we want to update with precreated translation.
 * @param array $product
 *   Array with product values.
 * @param string $langcode
 *   Langcode string.
 */
function acm_demo_acm_sku_product_node_alter(NodeInterface &$node, array &$product, $langcode) {
  $description = (isset($product['attributes']['description'])) ? $product['attributes']['description'] : '';

  $categories = (isset($product['categories'])) ? $product['categories'] : [];
  $config = \Drupal::config('acm.connector');
  $sku_field_name = $config->get('sku_field_name') ?: 'field_skus';
  $category_field_name = $config->get('category_field_name');
  $text_format = $config->get('text_format') ?: 'rich_text';

  $node_title = html_entity_decode($product['name']);
  if ($config->get('product_title_use_sku')) {
    $node_title = html_entity_decode($product['sku']);
  }
  $node->setTitle($node_title);
  $body = [
    'value' => $description,
    'format' => $text_format,
  ];
  $node->set('body', $body);

  // Add categories if they're configured to be synced.
  if ($category_field_name) {
    $terms = [];

    foreach ($categories as $cid) {
      $term = \Drupal::service('acm_sku.category_repo')->loadCategoryTerm($cid);
      if ($term) {
        $terms[] = $term->id();
      }
    }
    $node->{$category_field_name} = $terms;
  }

  $node->{$sku_field_name} = [$product['sku']];

  $node->setPublished($config->get('product_publish'));
}
